{"ast":null,"code":"var _jsxFileName = \"D:\\\\HTML and CSS\\\\task-manager\\\\src\\\\Components\\\\SideBar.jsx\",\n  _s = $RefreshSig$();\nimport { useContext, useState } from 'react';\nimport logo from '../image-removebg-preview.png';\nimport { Store } from '../Store';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SideBar = () => {\n  _s();\n  let store = useContext(Store);\n  let [showModal, setShowModal] = useState(false);\n  function disableModal() {\n    setShowModal(false);\n  }\n  function enableModal() {\n    setShowModal(true);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sidebar\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      onClick: () => {\n        window.location.reload();\n      },\n      className: \"logo\",\n      src: logo,\n      alt: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: enableModal,\n      children: \"Stats\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        localStorage.removeItem(\"currUser\");\n        window.location.reload();\n      },\n      children: \"Logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), showModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"allmodal\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"OnGoing tasks: \", store.currUser.ongoing.l]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: disableModal,\n        className: \"backdrop\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 27\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n};\n_s(SideBar, \"7KobpkZiDO52NTckAxsAzRWajHk=\");\n_c = SideBar;\nexport default SideBar;\nvar _c;\n$RefreshReg$(_c, \"SideBar\");","map":{"version":3,"names":["useContext","useState","logo","Store","jsxDEV","_jsxDEV","SideBar","_s","store","showModal","setShowModal","disableModal","enableModal","className","children","onClick","window","location","reload","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","localStorage","removeItem","currUser","ongoing","l","_c","$RefreshReg$"],"sources":["D:/HTML and CSS/task-manager/src/Components/SideBar.jsx"],"sourcesContent":["import { useContext, useState } from 'react';\r\nimport logo from '../image-removebg-preview.png'\r\nimport { Store } from '../Store';\r\nconst SideBar = () => {\r\n    let store=useContext(Store)\r\n    let [showModal, setShowModal]=useState(false);\r\n    function disableModal(){\r\n        setShowModal(false);\r\n    }\r\n    function enableModal(){\r\n        setShowModal(true);\r\n    }\r\n    return ( \r\n        <div className=\"sidebar\">\r\n            <img onClick={()=>{\r\n                window.location.reload();\r\n            }}  className='logo' src={logo} alt=\"\" />\r\n            <button onClick={enableModal}>Stats</button>\r\n            <button onClick={()=>{\r\n            localStorage.removeItem(\"currUser\");\r\n            window.location.reload();\r\n            }} >Logout\r\n            </button>\r\n            {showModal && <div className='allmodal'>\r\n                <div className='modal'>\r\n                    <h1>OnGoing tasks: {store.currUser.ongoing.l}</h1>\r\n                </div>\r\n                <div onClick={disableModal} className='backdrop'>\r\n\r\n                </div>\r\n            </div>}\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default SideBar;"],"mappings":";;AAAA,SAASA,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAC5C,OAAOC,IAAI,MAAM,+BAA+B;AAChD,SAASC,KAAK,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACjC,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,IAAIC,KAAK,GAACR,UAAU,CAACG,KAAK,CAAC;EAC3B,IAAI,CAACM,SAAS,EAAEC,YAAY,CAAC,GAACT,QAAQ,CAAC,KAAK,CAAC;EAC7C,SAASU,YAAYA,CAAA,EAAE;IACnBD,YAAY,CAAC,KAAK,CAAC;EACvB;EACA,SAASE,WAAWA,CAAA,EAAE;IAClBF,YAAY,CAAC,IAAI,CAAC;EACtB;EACA,oBACIL,OAAA;IAAKQ,SAAS,EAAC,SAAS;IAAAC,QAAA,gBACpBT,OAAA;MAAKU,OAAO,EAAEA,CAAA,KAAI;QACdC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC;MAC5B,CAAE;MAAEL,SAAS,EAAC,MAAM;MAACM,GAAG,EAAEjB,IAAK;MAACkB,GAAG,EAAC;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACzCnB,OAAA;MAAQU,OAAO,EAAEH,WAAY;MAAAE,QAAA,EAAC;IAAK;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC5CnB,OAAA;MAAQU,OAAO,EAAEA,CAAA,KAAI;QACrBU,YAAY,CAACC,UAAU,CAAC,UAAU,CAAC;QACnCV,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC;MACxB,CAAE;MAAAJ,QAAA,EAAE;IACJ;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACRf,SAAS,iBAAIJ,OAAA;MAAKQ,SAAS,EAAC,UAAU;MAAAC,QAAA,gBACnCT,OAAA;QAAKQ,SAAS,EAAC,OAAO;QAAAC,QAAA,eAClBT,OAAA;UAAAS,QAAA,GAAI,iBAAe,EAACN,KAAK,CAACmB,QAAQ,CAACC,OAAO,CAACC,CAAC;QAAA;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjD,CAAC,eACNnB,OAAA;QAAKU,OAAO,EAAEJ,YAAa;QAACE,SAAS,EAAC;MAAU;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAE3C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAAAjB,EAAA,CA9BKD,OAAO;AAAAwB,EAAA,GAAPxB,OAAO;AAgCb,eAAeA,OAAO;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}