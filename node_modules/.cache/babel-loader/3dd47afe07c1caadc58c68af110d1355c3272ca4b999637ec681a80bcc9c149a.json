{"ast":null,"code":"var _jsxFileName = \"D:\\\\HTML and CSS\\\\task-manager\\\\src\\\\Components\\\\Ai.jsx\",\n  _s = $RefreshSig$();\nimport { useContext, useRef, useState } from \"react\";\nimport { Store } from \"../Store\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Ai = () => {\n  _s();\n  let selectFromRef = useRef(null);\n  let selectToRef = useRef(null);\n  let store = useContext(Store);\n  let timeFromRef = useRef(null);\n  let timeToRef = useRef(null);\n  let [schedule, setSchedule] = useState([]);\n  async function AiCall() {\n    let res;\n    let query = getText();\n    fetch(`http://localhost:5000/gpt/${query}`).then(response => {\n      return response.json();\n    }).then(data => {\n      console.log(data.res);\n      res = data.res;\n      let steps = splitStringToList(res);\n      console.log(steps);\n      let temp = steps.map(step => {\n        return /*#__PURE__*/_jsxDEV(\"h4\", {\n          style: {\n            whiteSpace: 'nowrap'\n          },\n          children: step\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 24\n        }, this);\n      });\n      setSchedule(temp);\n    });\n  }\n  function splitStringToList(str) {\n    const splitArray = str.split(/\\d+\\.\\s/).filter(Boolean);\n    return splitArray;\n  }\n  function getText() {\n    let str = \"I want a day plan to make \";\n    let temp = store.currUser.tasks;\n    for (let i = 0; i < temp.length - 1; i++) {\n      str += temp[i].content + \" and \";\n    }\n    str += temp[temp.length - 1].content;\n    str += \" and i will start from \" + timeFromRef.current.value + selectFromRef.current.value + \" to \" + timeToRef.current.value + selectToRef.current.value;\n    str += \" make your response in the form 1. task 2. task etc\";\n    return str;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ai\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"settings\",\n      style: {\n        textAlign: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"from\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: timeFromRef,\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"selectOption\",\n        ref: selectFromRef,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"AM\",\n          children: \"PM\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"PM\",\n          children: \"AM\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"to\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: timeToRef,\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"selectOption\",\n        ref: selectToRef,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"AM\",\n          children: \"PM\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"PM\",\n          children: \"AM\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: AiCall,\n        children: \"Create schedule\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        overflowY: 'auto'\n      },\n      className: \"schedule\",\n      children: schedule\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n_s(Ai, \"z7/DKklyieG4b30MagvMDUKmS+w=\");\n_c = Ai;\nexport default Ai;\nvar _c;\n$RefreshReg$(_c, \"Ai\");","map":{"version":3,"names":["useContext","useRef","useState","Store","jsxDEV","_jsxDEV","Ai","_s","selectFromRef","selectToRef","store","timeFromRef","timeToRef","schedule","setSchedule","AiCall","res","query","getText","fetch","then","response","json","data","console","log","steps","splitStringToList","temp","map","step","style","whiteSpace","children","fileName","_jsxFileName","lineNumber","columnNumber","str","splitArray","split","filter","Boolean","currUser","tasks","i","length","content","current","value","className","textAlign","ref","type","id","onClick","overflowY","_c","$RefreshReg$"],"sources":["D:/HTML and CSS/task-manager/src/Components/Ai.jsx"],"sourcesContent":["import { useContext, useRef, useState } from \"react\";\r\nimport { Store } from \"../Store\";\r\n\r\nconst Ai = () => {\r\n    \r\n\r\n    let selectFromRef=useRef(null);\r\n    let selectToRef=useRef(null);\r\n    let store=useContext(Store);\r\n    let timeFromRef=useRef(null);\r\n    let timeToRef=useRef(null);\r\n    let [schedule,setSchedule]=useState([])\r\n    async function AiCall(){\r\n        let res;\r\n        let query=getText();\r\n        fetch(`http://localhost:5000/gpt/${query}`).then((response) =>{\r\n            return response.json();\r\n        }).then((data)=>{\r\n            console.log(data.res);\r\n            res=data.res;\r\n            let steps=splitStringToList(res);\r\n            console.log(steps);\r\n            let temp=steps.map((step)=>{\r\n                return <h4 style={{ whiteSpace: 'nowrap' }}>{step}</h4>\r\n            })\r\n            setSchedule(temp);\r\n        })\r\n        \r\n    \r\n    }\r\n    function splitStringToList(str) {\r\n        const splitArray = str.split(/\\d+\\.\\s/).filter(Boolean);\r\n        return splitArray;\r\n    }\r\n    function getText(){\r\n        let str=\"I want a day plan to make \"\r\n        let temp=store.currUser.tasks;\r\n        for(let i=0; i<temp.length-1; i++){\r\n            str+=temp[i].content+\" and \"\r\n        }\r\n        str+=temp[temp.length-1].content;\r\n        str+=\" and i will start from \"+ timeFromRef.current.value+selectFromRef.current.value+\" to \"+timeToRef.current.value+selectToRef.current.value;\r\n        str+=\" make your response in the form 1. task 2. task etc\"\r\n        return str\r\n    }\r\n    return ( \r\n        <div className=\"ai\">\r\n            <div className=\"settings\" style={{textAlign:'center'}}>\r\n                <span>from</span>\r\n                <input ref={timeFromRef} type=\"text\" />\r\n                <select id=\"selectOption\" ref={selectFromRef}>\r\n                    <option value=\"AM\">PM</option>\r\n                    <option value=\"PM\">AM</option>\r\n                </select>\r\n                <span>to</span>\r\n                <input ref={timeToRef} type=\"text\" />\r\n                <select id=\"selectOption\" ref={selectToRef}>\r\n                    <option value=\"AM\">PM</option>\r\n                    <option value=\"PM\">AM</option>\r\n                </select>\r\n                <button onClick={AiCall}>Create schedule</button>\r\n            </div>\r\n            <div style={{ overflowY: 'auto' }} className=\"schedule\">\r\n                {schedule}\r\n            </div>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Ai;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}