{"ast":null,"code":"var _jsxFileName = \"D:\\\\HTML and CSS\\\\task-manager\\\\src\\\\Components\\\\Ai.jsx\",\n  _s = $RefreshSig$();\nimport { useContext, useRef, useState } from \"react\";\nimport { Store } from \"../Store\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Ai = () => {\n  _s();\n  let selectFromRef = useRef(null);\n  let selectToRef = useRef(null);\n  let store = useContext(Store);\n  let timeFromRef = useRef(null);\n  let timeToRef = useRef(null);\n  let [schedule, setSchedule] = useState([]);\n  async function AiCall() {\n    let query = getText();\n    console.log(query);\n    const url = 'https://open-ai21.p.rapidapi.com/conversationgpt35';\n    const options = {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json',\n        'X-RapidAPI-Key': '30bbe95bb8mshd18d66efbdf604ep1ab26ajsndc5b0723adc1',\n        'X-RapidAPI-Host': 'open-ai21.p.rapidapi.com'\n      },\n      body: {\n        messages: [{\n          role: 'user',\n          content: 'hello'\n        }],\n        web_access: false,\n        system_prompt: '',\n        temperature: 0.9,\n        top_k: 5,\n        top_p: 0.9,\n        max_tokens: 256\n      }\n    };\n    try {\n      const response = await fetch(url, options);\n      const result = await response.json();\n    } catch (error) {\n      console.error(error);\n    }\n  }\n  function splitStringToList(str) {\n    const splitArray = str.split(/\\d+\\.\\s/).filter(Boolean);\n    return splitArray;\n  }\n  function getText() {\n    let str = \"I want a day plan to make \";\n    let temp = store.currUser.tasks;\n    for (let i = 0; i < temp.length - 1; i++) {\n      str += temp[i].content + \" and \";\n    }\n    str += temp[temp.length - 1].content;\n    str += \" and i will start from \" + timeFromRef.current.value + selectFromRef.current.value + \" to \" + timeToRef.current.value + selectToRef.current.value;\n    str += \" make your response in the form 1. task 2. task etc\";\n    return str;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"settings\",\n      style: {\n        textAlign: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"from\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: timeFromRef,\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"selectOption\",\n        ref: selectFromRef,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"AM\",\n          children: \"PM\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"PM\",\n          children: \"AM\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"to\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: timeToRef,\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"selectOption\",\n        ref: selectToRef,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"AM\",\n          children: \"PM\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"PM\",\n          children: \"AM\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: AiCall,\n        children: \"Create schedule\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: schedule\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n};\n_s(Ai, \"z7/DKklyieG4b30MagvMDUKmS+w=\");\n_c = Ai;\nexport default Ai;\nvar _c;\n$RefreshReg$(_c, \"Ai\");","map":{"version":3,"names":["useContext","useRef","useState","Store","jsxDEV","_jsxDEV","Ai","_s","selectFromRef","selectToRef","store","timeFromRef","timeToRef","schedule","setSchedule","AiCall","query","getText","console","log","url","options","method","headers","body","messages","role","content","web_access","system_prompt","temperature","top_k","top_p","max_tokens","response","fetch","result","json","error","splitStringToList","str","splitArray","split","filter","Boolean","temp","currUser","tasks","i","length","current","value","children","className","style","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","ref","type","id","onClick","_c","$RefreshReg$"],"sources":["D:/HTML and CSS/task-manager/src/Components/Ai.jsx"],"sourcesContent":["import { useContext, useRef, useState } from \"react\";\r\nimport { Store } from \"../Store\";\r\nconst Ai = () => {\r\n    \r\n\r\n    let selectFromRef=useRef(null);\r\n    let selectToRef=useRef(null);\r\n    let store=useContext(Store);\r\n    let timeFromRef=useRef(null);\r\n    let timeToRef=useRef(null);\r\n    let [schedule,setSchedule]=useState([])\r\n    async function AiCall(){\r\n\r\n        let query=getText();\r\n        console.log(query);\r\n        const url = 'https://open-ai21.p.rapidapi.com/conversationgpt35';\r\nconst options = {\r\n\tmethod: 'POST',\r\n\theaders: {\r\n\t\t'content-type': 'application/json',\r\n\t\t'X-RapidAPI-Key': '30bbe95bb8mshd18d66efbdf604ep1ab26ajsndc5b0723adc1',\r\n\t\t'X-RapidAPI-Host': 'open-ai21.p.rapidapi.com'\r\n\t},\r\n\tbody: {\r\n\t\tmessages: [\r\n\t\t\t{\r\n\t\t\t\trole: 'user',\r\n\t\t\t\tcontent: 'hello'\r\n\t\t\t}\r\n\t\t],\r\n\t\tweb_access: false,\r\n\t\tsystem_prompt: '',\r\n\t\ttemperature: 0.9,\r\n\t\ttop_k: 5,\r\n\t\ttop_p: 0.9,\r\n\t\tmax_tokens: 256\r\n\t}\r\n};\r\n\r\ntry {\r\n\tconst response = await fetch(url, options);\r\n\tconst result = await response.json();\r\n\t\r\n} catch (error) {\r\n\tconsole.error(error);\r\n}\r\n    }\r\n    function splitStringToList(str) {\r\n        const splitArray = str.split(/\\d+\\.\\s/).filter(Boolean);\r\n        return splitArray;\r\n    }\r\n    function getText(){\r\n        let str=\"I want a day plan to make \"\r\n        let temp=store.currUser.tasks;\r\n        for(let i=0; i<temp.length-1; i++){\r\n            str+=temp[i].content+\" and \"\r\n        }\r\n        str+=temp[temp.length-1].content;\r\n        str+=\" and i will start from \"+ timeFromRef.current.value+selectFromRef.current.value+\" to \"+timeToRef.current.value+selectToRef.current.value;\r\n        str+=\" make your response in the form 1. task 2. task etc\"\r\n        return str\r\n    }\r\n    return ( \r\n        <div>\r\n            <div className=\"settings\" style={{textAlign:'center'}}>\r\n                <span>from</span>\r\n                <input ref={timeFromRef} type=\"text\" />\r\n                <select id=\"selectOption\" ref={selectFromRef}>\r\n                    <option value=\"AM\">PM</option>\r\n                    <option value=\"PM\">AM</option>\r\n                </select>\r\n                <span>to</span>\r\n                <input ref={timeToRef} type=\"text\" />\r\n                <select id=\"selectOption\" ref={selectToRef}>\r\n                    <option value=\"AM\">PM</option>\r\n                    <option value=\"PM\">AM</option>\r\n                </select>\r\n                <button onClick={AiCall}>Create schedule</button>\r\n            </div>\r\n            \r\n            <div>\r\n                {schedule}\r\n            </div>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Ai;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}