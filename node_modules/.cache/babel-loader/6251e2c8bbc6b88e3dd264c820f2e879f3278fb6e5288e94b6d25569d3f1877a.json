{"ast":null,"code":"var _jsxFileName = \"D:\\\\HTML and CSS\\\\task-manager\\\\src\\\\Components\\\\Tasks.jsx\",\n  _s = $RefreshSig$();\nimport { useContext, useEffect, use } from \"react\";\nimport { Store } from \"../Store\";\nimport TaskCard from \"./TaskCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Tasks = () => {\n  _s();\n  let store = useContext(Store);\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    let usertasks = store.currUser.tasks;\n    console.log(usertasks);\n    tasks = usertasks.map((task, index) => {\n      return /*#__PURE__*/_jsxDEV(TaskCard, {\n        content: task.content,\n        id: task.id\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 20\n      }, this);\n    });\n    console.log(tasks);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: tasks\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_s(Tasks, \"dh6Hzmp4p6QblgEfSzcMSfr5iYI=\");\n_c = Tasks;\nexport default Tasks;\nvar _c;\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"names":["useContext","useEffect","use","Store","TaskCard","jsxDEV","_jsxDEV","Tasks","_s","store","tasks","setTasks","useState","usertasks","currUser","console","log","map","task","index","content","id","fileName","_jsxFileName","lineNumber","columnNumber","children","_c","$RefreshReg$"],"sources":["D:/HTML and CSS/task-manager/src/Components/Tasks.jsx"],"sourcesContent":["import { useContext, useEffect,use } from \"react\";\r\nimport { Store } from \"../Store\";\r\nimport TaskCard from \"./TaskCard\";\r\nconst Tasks = () => {\r\n    let store=useContext(Store);\r\n    const [tasks, setTasks] = useState([]);\r\n    useEffect(()=>{\r\n        let usertasks=store.currUser.tasks;\r\n        console.log(usertasks);\r\n        tasks=usertasks.map((task,index)=>{\r\n            return <TaskCard content={task.content} key={index} id={task.id}/>\r\n        })\r\n        console.log(tasks);\r\n    },[])\r\n    return ( \r\n    <div>\r\n        {tasks}\r\n    </div> \r\n    );\r\n}\r\n \r\nexport default Tasks;"],"mappings":";;AAAA,SAASA,UAAU,EAAEC,SAAS,EAACC,GAAG,QAAQ,OAAO;AACjD,SAASC,KAAK,QAAQ,UAAU;AAChC,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAClC,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,IAAIC,KAAK,GAACT,UAAU,CAACG,KAAK,CAAC;EAC3B,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGC,QAAQ,CAAC,EAAE,CAAC;EACtCX,SAAS,CAAC,MAAI;IACV,IAAIY,SAAS,GAACJ,KAAK,CAACK,QAAQ,CAACJ,KAAK;IAClCK,OAAO,CAACC,GAAG,CAACH,SAAS,CAAC;IACtBH,KAAK,GAACG,SAAS,CAACI,GAAG,CAAC,CAACC,IAAI,EAACC,KAAK,KAAG;MAC9B,oBAAOb,OAAA,CAACF,QAAQ;QAACgB,OAAO,EAAEF,IAAI,CAACE,OAAQ;QAAaC,EAAE,EAAEH,IAAI,CAACG;MAAG,GAAnBF,KAAK;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAe,CAAC;IACtE,CAAC,CAAC;IACFV,OAAO,CAACC,GAAG,CAACN,KAAK,CAAC;EACtB,CAAC,EAAC,EAAE,CAAC;EACL,oBACAJ,OAAA;IAAAoB,QAAA,EACKhB;EAAK;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV,CAAC;AAAAjB,EAAA,CAhBKD,KAAK;AAAAoB,EAAA,GAALpB,KAAK;AAkBX,eAAeA,KAAK;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}