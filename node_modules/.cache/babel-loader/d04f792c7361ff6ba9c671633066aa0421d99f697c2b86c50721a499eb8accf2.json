{"ast":null,"code":"var _jsxFileName = \"D:\\\\HTML and CSS\\\\task-manager\\\\src\\\\Components\\\\Tasks.jsx\",\n  _s = $RefreshSig$();\nimport { useContext, useEffect, useRef, useState } from \"react\";\nimport { Store } from \"../Store\";\nimport TaskCard from \"./TaskCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Tasks = () => {\n  _s();\n  let taskRef = useRef(\"\");\n  let store = useContext(Store);\n  const [tasks, setTasks] = useState([]);\n  let [curr, setCurr] = useState(store.currUser);\n  useEffect(() => {\n    console.log(\"jnhvgt\");\n    let usertasks = store.currUser.tasks;\n    console.log(usertasks);\n    let temp = usertasks.map((task, index) => {\n      return /*#__PURE__*/_jsxDEV(TaskCard, {\n        content: task.content,\n        id: task.id\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 20\n      }, this);\n    });\n    setTasks(temp);\n    console.log(tasks);\n  }, [store.currUser, curr]);\n  function addTask() {\n    let newObj = {\n      ...curr\n    };\n    let newTask = {\n      content: taskRef.current.value,\n      id: newObj.uniId + 1\n    };\n    newObj.tasks.push(newTask);\n    newObj.uniId++;\n    console.log(newObj);\n    setCurr(newObj);\n    store.updateCurrUser(newObj);\n    fetch(\"http://localhost:5000/addtask\", {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\"\n      },\n      body: JSON.stringify(newObj)\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      } else {\n        return response.json();\n      }\n    }).then(data => {\n      setCurr(data);\n      store.updateCurrUser(data);\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      ref: taskRef,\n      type: \"text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addTask,\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: tasks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(Tasks, \"XVcAuAfopQwnINo0nPJvUjhqQZs=\");\n_c = Tasks;\nexport default Tasks;\nvar _c;\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"names":["useContext","useEffect","useRef","useState","Store","TaskCard","jsxDEV","_jsxDEV","Tasks","_s","taskRef","store","tasks","setTasks","curr","setCurr","currUser","console","log","usertasks","temp","map","task","index","content","id","fileName","_jsxFileName","lineNumber","columnNumber","addTask","newObj","newTask","current","value","uniId","push","updateCurrUser","fetch","method","headers","body","JSON","stringify","then","response","ok","Error","json","data","children","ref","type","onClick","_c","$RefreshReg$"],"sources":["D:/HTML and CSS/task-manager/src/Components/Tasks.jsx"],"sourcesContent":["import { useContext, useEffect,useRef,useState } from \"react\";\r\nimport { Store } from \"../Store\";\r\nimport TaskCard from \"./TaskCard\";\r\nconst Tasks = () => {\r\n    let taskRef=useRef(\"\")\r\n    let store=useContext(Store);\r\n    const [tasks, setTasks] = useState([]);\r\n    let [curr,setCurr]=useState(store.currUser);\r\n    useEffect(()=>{\r\n        console.log(\"jnhvgt\");\r\n        let usertasks=store.currUser.tasks;\r\n        console.log(usertasks);\r\n        let temp=usertasks.map((task,index)=>{\r\n            return <TaskCard content={task.content} key={index} id={task.id}/>\r\n        })\r\n        setTasks(temp);\r\n        console.log(tasks);\r\n    },[store.currUser,curr]);\r\n    \r\n    function addTask(){\r\n        let newObj = { ...curr };\r\n        let newTask={\r\n            content:taskRef.current.value,\r\n            id:newObj.uniId+1\r\n        }\r\n        newObj.tasks.push(newTask);\r\n        newObj.uniId++;\r\n        console.log(newObj);\r\n        setCurr(newObj);\r\n        store.updateCurrUser(newObj);\r\n        fetch(\"http://localhost:5000/addtask\",{\r\n            method: \"POST\",\r\n            headers:{\r\n                \"content-type\": \"application/json\",\r\n            },\r\n            body:JSON.stringify(newObj)\r\n        }).then((response)=>{\r\n            if (!response.ok) {\r\n                throw new Error('Network response was not ok');\r\n              }\r\n            else{\r\n                \r\n                return response.json();\r\n            }\r\n        }).then((data)=>{\r\n            setCurr(data);\r\n            store.updateCurrUser(data);\r\n        })\r\n    }\r\n\r\n    return ( \r\n    <div>\r\n        <input ref={taskRef} type=\"text\" />\r\n        <button onClick={addTask}>Add</button>\r\n        <div>\r\n        {tasks}\r\n        </div>\r\n        \r\n    </div> \r\n    );\r\n}\r\n \r\nexport default Tasks;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}