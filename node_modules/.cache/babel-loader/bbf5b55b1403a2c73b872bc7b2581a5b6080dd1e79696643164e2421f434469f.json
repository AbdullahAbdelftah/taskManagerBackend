{"ast":null,"code":"var _jsxFileName = \"D:\\\\HTML and CSS\\\\task-manager\\\\src\\\\Components\\\\TaskCard.jsx\",\n  _s = $RefreshSig$();\nimport { useContext } from \"react\";\nimport { Store } from \"../Store\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskCard = props => {\n  _s();\n  const shinyColors = [\"#ff0000\",\n  // Red\n  \"#00ff00\",\n  // Green\n  \"#0000ff\",\n  // Blue\n  \"#ffff00\",\n  // Yellow\n  \"#ff00ff\",\n  // Magenta\n  \"#00ffff\",\n  // Cyan\n  \"#ff7f00\",\n  // Orange\n  \"#7fff00\",\n  // Chartreuse\n  \"#ff1493\",\n  // Deep Pink\n  \"#9400d3\" // Dark Violet\n  ];\n  let store = useContext(Store);\n  function getRandomNumber() {\n    const randomNumber = Math.random();\n    const scaledNumber = Math.floor(randomNumber * 10);\n    return scaledNumber;\n  }\n  function sendOngoing() {\n    fetch(`http://localhost:5000/sendOngoing/${props.id}/${store.currUser.username}`).then(response => {\n      if (!response.ok) {\n        throw new Error(response);\n      } else {\n        return response.json();\n      }\n    }).then(data => {\n      console.log(data);\n      store.updateCurrUser(data);\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      b\n    },\n    className: \"taskcard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: props.content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendOngoing,\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fa-solid fa-play fa-xl\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 43\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n_s(TaskCard, \"Wl1jJrZzTCxjtMcqth/dX4wg3Uo=\");\n_c = TaskCard;\nexport default TaskCard;\nvar _c;\n$RefreshReg$(_c, \"TaskCard\");","map":{"version":3,"names":["useContext","Store","jsxDEV","_jsxDEV","TaskCard","props","_s","shinyColors","store","getRandomNumber","randomNumber","Math","random","scaledNumber","floor","sendOngoing","fetch","id","currUser","username","then","response","ok","Error","json","data","console","log","updateCurrUser","style","b","className","children","content","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["D:/HTML and CSS/task-manager/src/Components/TaskCard.jsx"],"sourcesContent":["import { useContext } from \"react\";\r\nimport { Store } from \"../Store\";\r\nconst TaskCard = (props) => {\r\n    const shinyColors = [\r\n        \"#ff0000\", // Red\r\n        \"#00ff00\", // Green\r\n        \"#0000ff\", // Blue\r\n        \"#ffff00\", // Yellow\r\n        \"#ff00ff\", // Magenta\r\n        \"#00ffff\", // Cyan\r\n        \"#ff7f00\", // Orange\r\n        \"#7fff00\", // Chartreuse\r\n        \"#ff1493\", // Deep Pink\r\n        \"#9400d3\"  // Dark Violet\r\n      ];\r\n    let store=useContext(Store);\r\n    function getRandomNumber() {\r\n        const randomNumber = Math.random();\r\n        const scaledNumber = Math.floor(randomNumber * 10);\r\n        return scaledNumber;\r\n      }\r\n    function sendOngoing(){\r\n        fetch(`http://localhost:5000/sendOngoing/${props.id}/${store.currUser.username}`).then((response)=>{\r\n            if(!response.ok){\r\n                throw new Error(response);\r\n            }\r\n            else{\r\n                return response.json();\r\n            }\r\n        }).then((data)=>{\r\n            console.log(data);\r\n            store.updateCurrUser(data);\r\n        })\r\n    }\r\n    return ( \r\n        <div style={{b}} className=\"taskcard\">\r\n            <h2>{props.content}</h2>\r\n            <button onClick={sendOngoing}><i className=\"fa-solid fa-play fa-xl\"></i></button>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default TaskCard;"],"mappings":";;AAAA,SAASA,UAAU,QAAQ,OAAO;AAClC,SAASC,KAAK,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACjC,MAAMC,QAAQ,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACxB,MAAMC,WAAW,GAAG,CAChB,SAAS;EAAE;EACX,SAAS;EAAE;EACX,SAAS;EAAE;EACX,SAAS;EAAE;EACX,SAAS;EAAE;EACX,SAAS;EAAE;EACX,SAAS;EAAE;EACX,SAAS;EAAE;EACX,SAAS;EAAE;EACX,SAAS,CAAE;EAAA,CACZ;EACH,IAAIC,KAAK,GAACR,UAAU,CAACC,KAAK,CAAC;EAC3B,SAASQ,eAAeA,CAAA,EAAG;IACvB,MAAMC,YAAY,GAAGC,IAAI,CAACC,MAAM,CAAC,CAAC;IAClC,MAAMC,YAAY,GAAGF,IAAI,CAACG,KAAK,CAACJ,YAAY,GAAG,EAAE,CAAC;IAClD,OAAOG,YAAY;EACrB;EACF,SAASE,WAAWA,CAAA,EAAE;IAClBC,KAAK,CAAE,qCAAoCX,KAAK,CAACY,EAAG,IAAGT,KAAK,CAACU,QAAQ,CAACC,QAAS,EAAC,CAAC,CAACC,IAAI,CAAEC,QAAQ,IAAG;MAC/F,IAAG,CAACA,QAAQ,CAACC,EAAE,EAAC;QACZ,MAAM,IAAIC,KAAK,CAACF,QAAQ,CAAC;MAC7B,CAAC,MACG;QACA,OAAOA,QAAQ,CAACG,IAAI,CAAC,CAAC;MAC1B;IACJ,CAAC,CAAC,CAACJ,IAAI,CAAEK,IAAI,IAAG;MACZC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;MACjBjB,KAAK,CAACoB,cAAc,CAACH,IAAI,CAAC;IAC9B,CAAC,CAAC;EACN;EACA,oBACItB,OAAA;IAAK0B,KAAK,EAAE;MAACC;IAAC,CAAE;IAACC,SAAS,EAAC,UAAU;IAAAC,QAAA,gBACjC7B,OAAA;MAAA6B,QAAA,EAAK3B,KAAK,CAAC4B;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACxBlC,OAAA;MAAQmC,OAAO,EAAEvB,WAAY;MAAAiB,QAAA,eAAC7B,OAAA;QAAG4B,SAAS,EAAC;MAAwB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChF,CAAC;AAEd,CAAC;AAAA/B,EAAA,CAtCKF,QAAQ;AAAAmC,EAAA,GAARnC,QAAQ;AAwCd,eAAeA,QAAQ;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}