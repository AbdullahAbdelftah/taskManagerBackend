{"ast":null,"code":"var _jsxFileName = \"D:\\\\HTML and CSS\\\\task-manager\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport Signup from './Components/Signup';\nimport './App.css';\nimport { Store } from './Store';\nimport { useContext, useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  let store = useContext(Store);\n  let [logged, setLogged] = useState(false);\n  useEffect(() => {\n    // Function to handle changes in localStorage\n    const handleStorageChange = () => {\n      try {\n        const storedUser = localStorage.getItem('currUser');\n        console.log('Stored User:', storedUser);\n        if (!storedUser) {\n          setLogged(false);\n        } else {\n          const parsedUser = JSON.parse(storedUser);\n          console.log('Parsed User:', parsedUser);\n          setLogged(true);\n          store.updateCurrUser(parsedUser);\n        }\n      } catch (error) {\n        console.error('Error parsing stored user:', error);\n        setLogged(false);\n      }\n    };\n    window.addEventListener('storage', handleStorageChange);\n    handleStorageChange();\n    return () => {\n      window.removeEventListener('storage', handleStorageChange);\n    };\n  }, [store.currUser]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [!logged && /*#__PURE__*/_jsxDEV(Signup, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 18\n    }, this), logged && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          localStorage.removeItem('currUser');\n        },\n        children: \"vdfdv\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"6dUNPfhMUBCsNTNgTjgvJgh9Lxs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Signup","Store","useContext","useEffect","useState","jsxDEV","_jsxDEV","App","_s","store","logged","setLogged","handleStorageChange","storedUser","localStorage","getItem","console","log","parsedUser","JSON","parse","updateCurrUser","error","window","addEventListener","removeEventListener","currUser","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","removeItem","_c","$RefreshReg$"],"sources":["D:/HTML and CSS/task-manager/src/App.js"],"sourcesContent":["import Signup from './Components/Signup';\nimport './App.css';\nimport { Store } from './Store';\nimport { useContext, useEffect, useState } from 'react';\nfunction App() {\n  let store=useContext(Store);\n  let [logged,setLogged]=useState(false);\n  useEffect(() => {\n    // Function to handle changes in localStorage\n    const handleStorageChange = () => {\n      try {\n        const storedUser = localStorage.getItem('currUser');\n        console.log('Stored User:', storedUser);\n\n        if (!storedUser) {\n          setLogged(false);\n        } else {\n          const parsedUser = JSON.parse(storedUser);\n          console.log('Parsed User:', parsedUser);\n          setLogged(true);\n          store.updateCurrUser(parsedUser);\n        }\n      } catch (error) {\n        console.error('Error parsing stored user:', error);\n        setLogged(false);\n      }\n    };\n    window.addEventListener('storage', handleStorageChange);\n    handleStorageChange();\n    return () => {\n      window.removeEventListener('storage', handleStorageChange);\n    };\n  }, [store.currUser]);\n  return (\n    <div className=\"container\">\n      {!logged&& <Signup/>}\n      {logged &&\n      <div>\n        <button onClick={()=>{\n          localStorage.removeItem('currUser');\n        }}>vdfdv</button>\n      </div>}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,MAAM,MAAM,qBAAqB;AACxC,OAAO,WAAW;AAClB,SAASC,KAAK,QAAQ,SAAS;AAC/B,SAASC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACxD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,IAAIC,KAAK,GAACP,UAAU,CAACD,KAAK,CAAC;EAC3B,IAAI,CAACS,MAAM,EAACC,SAAS,CAAC,GAACP,QAAQ,CAAC,KAAK,CAAC;EACtCD,SAAS,CAAC,MAAM;IACd;IACA,MAAMS,mBAAmB,GAAGA,CAAA,KAAM;MAChC,IAAI;QACF,MAAMC,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;QACnDC,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEJ,UAAU,CAAC;QAEvC,IAAI,CAACA,UAAU,EAAE;UACfF,SAAS,CAAC,KAAK,CAAC;QAClB,CAAC,MAAM;UACL,MAAMO,UAAU,GAAGC,IAAI,CAACC,KAAK,CAACP,UAAU,CAAC;UACzCG,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEC,UAAU,CAAC;UACvCP,SAAS,CAAC,IAAI,CAAC;UACfF,KAAK,CAACY,cAAc,CAACH,UAAU,CAAC;QAClC;MACF,CAAC,CAAC,OAAOI,KAAK,EAAE;QACdN,OAAO,CAACM,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;QAClDX,SAAS,CAAC,KAAK,CAAC;MAClB;IACF,CAAC;IACDY,MAAM,CAACC,gBAAgB,CAAC,SAAS,EAAEZ,mBAAmB,CAAC;IACvDA,mBAAmB,CAAC,CAAC;IACrB,OAAO,MAAM;MACXW,MAAM,CAACE,mBAAmB,CAAC,SAAS,EAAEb,mBAAmB,CAAC;IAC5D,CAAC;EACH,CAAC,EAAE,CAACH,KAAK,CAACiB,QAAQ,CAAC,CAAC;EACpB,oBACEpB,OAAA;IAAKqB,SAAS,EAAC,WAAW;IAAAC,QAAA,GACvB,CAAClB,MAAM,iBAAGJ,OAAA,CAACN,MAAM;MAAA6B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,EACnBtB,MAAM,iBACPJ,OAAA;MAAAsB,QAAA,eACEtB,OAAA;QAAQ2B,OAAO,EAAEA,CAAA,KAAI;UACnBnB,YAAY,CAACoB,UAAU,CAAC,UAAU,CAAC;QACrC,CAAE;QAAAN,QAAA,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACd,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACxB,EAAA,CAxCQD,GAAG;AAAA4B,EAAA,GAAH5B,GAAG;AA0CZ,eAAeA,GAAG;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}