{"ast":null,"code":"var _jsxFileName = \"D:\\\\HTML and CSS\\\\task-manager\\\\src\\\\Components\\\\Ai.jsx\",\n  _s = $RefreshSig$();\nimport { useContext, useRef, useState } from \"react\";\nimport { Store } from \"../Store\";\nimport { gpt } from \"../../openai/openai\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Ai = () => {\n  _s();\n  let selectFromRef = useRef(null);\n  let selectToRef = useRef(null);\n  let store = useContext(Store);\n  let timeFromRef = useRef(null);\n  let timeToRef = useRef(null);\n  let [schedule, setSchedule] = useState([]);\n  async function AiCall() {\n    let query = getText();\n    console.log(query);\n    let res = gpt(query);\n    let steps = splitStringToList(res);\n    let temp = steps.map(step => {\n      return h;\n    });\n  }\n  function splitStringToList(str) {\n    const splitArray = str.split(/\\d+\\.\\s/).filter(Boolean);\n    return splitArray;\n  }\n  function getText() {\n    let str = \"I want a day plan to make \";\n    let temp = store.currUser.tasks;\n    for (let i = 0; i < temp.length - 1; i++) {\n      str += temp[i].content + \" and \";\n    }\n    str += temp[temp.length - 1].content;\n    str += \" and i will start from \" + timeFromRef.current.value + selectFromRef.current.value + \" to \" + timeToRef.current.value + selectToRef.current.value;\n    str += \" make your response in the form 1. task 2. task etc\";\n    return str;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"settings\",\n      style: {\n        textAlign: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"from\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: timeFromRef,\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"selectOption\",\n        ref: selectFromRef,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"AM\",\n          children: \"PM\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"PM\",\n          children: \"AM\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"to\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: timeToRef,\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"selectOption\",\n        ref: selectToRef,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"AM\",\n          children: \"PM\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"PM\",\n          children: \"AM\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: AiCall,\n        children: \"Create schedule\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: schedule\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n_s(Ai, \"z7/DKklyieG4b30MagvMDUKmS+w=\");\n_c = Ai;\nexport default Ai;\nvar _c;\n$RefreshReg$(_c, \"Ai\");","map":{"version":3,"names":["useContext","useRef","useState","Store","gpt","jsxDEV","_jsxDEV","Ai","_s","selectFromRef","selectToRef","store","timeFromRef","timeToRef","schedule","setSchedule","AiCall","query","getText","console","log","res","steps","splitStringToList","temp","map","step","h","str","splitArray","split","filter","Boolean","currUser","tasks","i","length","content","current","value","children","className","style","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","ref","type","id","onClick","_c","$RefreshReg$"],"sources":["D:/HTML and CSS/task-manager/src/Components/Ai.jsx"],"sourcesContent":["import { useContext, useRef, useState } from \"react\";\r\nimport { Store } from \"../Store\";\r\nimport { gpt } from \"../../openai/openai\";\r\nconst Ai = () => {\r\n\r\n\r\n    let selectFromRef=useRef(null);\r\n    let selectToRef=useRef(null);\r\n    let store=useContext(Store);\r\n    let timeFromRef=useRef(null);\r\n    let timeToRef=useRef(null);\r\n    let [schedule,setSchedule]=useState([])\r\n    async function AiCall(){\r\n\r\n        let query=getText();\r\n        console.log(query);\r\n        let res=gpt(query);\r\n        let steps=splitStringToList(res);\r\n        let temp=steps.map((step)=>{\r\n            return h\r\n        })\r\n    \r\n    }\r\n    function splitStringToList(str) {\r\n        const splitArray = str.split(/\\d+\\.\\s/).filter(Boolean);\r\n        return splitArray;\r\n    }\r\n    function getText(){\r\n        let str=\"I want a day plan to make \"\r\n        let temp=store.currUser.tasks;\r\n        for(let i=0; i<temp.length-1; i++){\r\n            str+=temp[i].content+\" and \"\r\n        }\r\n        str+=temp[temp.length-1].content;\r\n        str+=\" and i will start from \"+ timeFromRef.current.value+selectFromRef.current.value+\" to \"+timeToRef.current.value+selectToRef.current.value;\r\n        str+=\" make your response in the form 1. task 2. task etc\"\r\n        return str\r\n    }\r\n    return ( \r\n        <div>\r\n            <div className=\"settings\" style={{textAlign:'center'}}>\r\n                <span>from</span>\r\n                <input ref={timeFromRef} type=\"text\" />\r\n                <select id=\"selectOption\" ref={selectFromRef}>\r\n                    <option value=\"AM\">PM</option>\r\n                    <option value=\"PM\">AM</option>\r\n                </select>\r\n                <span>to</span>\r\n                <input ref={timeToRef} type=\"text\" />\r\n                <select id=\"selectOption\" ref={selectToRef}>\r\n                    <option value=\"AM\">PM</option>\r\n                    <option value=\"PM\">AM</option>\r\n                </select>\r\n                <button onClick={AiCall}>Create schedule</button>\r\n            </div>\r\n            \r\n            <div>\r\n                {schedule}\r\n            </div>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Ai;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}