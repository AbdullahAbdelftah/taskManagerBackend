{"ast":null,"code":"var _jsxFileName = \"D:\\\\HTML and CSS\\\\task-manager\\\\src\\\\Components\\\\Ai.jsx\",\n  _s = $RefreshSig$();\nimport { useContext, useRef, useState } from \"react\";\nimport { Store } from \"../Store\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Ai = () => {\n  _s();\n  let [loading, setLoading] = useState(false);\n  let selectFromRef = useRef(null);\n  let selectToRef = useRef(null);\n  let store = useContext(Store);\n  let timeFromRef = useRef(null);\n  let timeToRef = useRef(null);\n  let [schedule, setSchedule] = useState([]);\n  async function ai() {\n    setLoading(true);\n    await AiCall();\n  }\n  async function AiCall() {\n    if (store.currUser.tasks.length <= 0) {\n      ret;\n    }\n    let res;\n    let query = getText();\n    console.log(query);\n    fetch(`http://localhost:5000/gpt/${query}`).then(response => {\n      return response.json();\n    }).then(data => {\n      console.log(data.res);\n      res = data.res;\n      let steps = splitStringToList(res);\n      console.log(steps);\n      let temp = steps.map(step => {\n        return /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: step\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 24\n        }, this);\n      });\n      setLoading(false);\n      setSchedule(temp);\n    });\n  }\n  function splitStringToList(str) {\n    const splitArray = str.split(/\\d+\\.\\s/).filter(Boolean);\n    return splitArray;\n  }\n  function getText() {\n    let str = \"I want a day plan to make \";\n    let temp = store.currUser.tasks;\n    for (let i = 0; i < temp.length - 1; i++) {\n      str += temp[i].content + \" and \";\n    }\n    str += temp[temp.length - 1].content;\n    str += \" and i will start from \" + timeFromRef.current.value + selectFromRef.current.value + \" to \" + timeToRef.current.value + selectToRef.current.value;\n    str += \" make your response in the form 1. task 2. task etc\";\n    return str;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ai\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"settings\",\n      style: {\n        textAlign: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"from\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: timeFromRef,\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"selectOption\",\n        ref: selectFromRef,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"PM\",\n          children: \"PM\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"AM\",\n          children: \"AM\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"to\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: timeToRef,\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"selectOption\",\n        ref: selectToRef,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"PM\",\n          children: \"PM\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"AM\",\n          children: \"AM\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"create\",\n        onClick: ai,\n        children: \"Create schedule\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"typewriter\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slide\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 40\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"paper\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"keyboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"schedule\",\n      children: schedule\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n_s(Ai, \"vxjVIRBYlYwgdnq5aH7WVccfJ0c=\");\n_c = Ai;\nexport default Ai;\nvar _c;\n$RefreshReg$(_c, \"Ai\");","map":{"version":3,"names":["useContext","useRef","useState","Store","jsxDEV","_jsxDEV","Ai","_s","loading","setLoading","selectFromRef","selectToRef","store","timeFromRef","timeToRef","schedule","setSchedule","ai","AiCall","currUser","tasks","length","ret","res","query","getText","console","log","fetch","then","response","json","data","steps","splitStringToList","temp","map","step","children","fileName","_jsxFileName","lineNumber","columnNumber","str","splitArray","split","filter","Boolean","i","content","current","value","className","style","textAlign","ref","type","id","onClick","_c","$RefreshReg$"],"sources":["D:/HTML and CSS/task-manager/src/Components/Ai.jsx"],"sourcesContent":["import { useContext, useRef, useState } from \"react\";\r\nimport { Store } from \"../Store\";\r\n\r\nconst Ai = () => {\r\n    \r\n    let [loading,setLoading]=useState(false);\r\n    let selectFromRef=useRef(null);\r\n    let selectToRef=useRef(null);\r\n    let store=useContext(Store);\r\n    let timeFromRef=useRef(null);\r\n    let timeToRef=useRef(null);\r\n    let [schedule,setSchedule]=useState([]);\r\n    async function ai(){\r\n        setLoading(true);\r\n        await AiCall();\r\n    }\r\n    async function AiCall(){\r\n        if(store.currUser.tasks.length<=0){\r\n            ret\r\n        }\r\n        let res;\r\n        let query=getText();\r\n        console.log(query);\r\n        fetch(`http://localhost:5000/gpt/${query}`).then((response) =>{\r\n            return response.json();\r\n        }).then((data)=>{\r\n            console.log(data.res);\r\n            res=data.res;\r\n            let steps=splitStringToList(res);\r\n            console.log(steps);\r\n            let temp=steps.map((step)=>{\r\n                return <h4>{step}</h4>\r\n            })\r\n            setLoading(false);\r\n            setSchedule(temp);\r\n        })\r\n        \r\n    \r\n    }\r\n    function splitStringToList(str) {\r\n        const splitArray = str.split(/\\d+\\.\\s/).filter(Boolean);\r\n        return splitArray;\r\n    }\r\n    function getText(){\r\n        let str=\"I want a day plan to make \"\r\n        let temp=store.currUser.tasks;\r\n        for(let i=0; i<temp.length-1; i++){\r\n            str+=temp[i].content+\" and \"\r\n        }\r\n        str+=temp[temp.length-1].content;\r\n        str+=\" and i will start from \"+ timeFromRef.current.value+selectFromRef.current.value+\" to \"+timeToRef.current.value+selectToRef.current.value;\r\n        str+=\" make your response in the form 1. task 2. task etc\"\r\n        return str\r\n    }\r\n    return ( \r\n        <div className=\"ai\">\r\n            <div className=\"settings\" style={{textAlign:'center'}}>\r\n                <span>from</span>\r\n                <input ref={timeFromRef} type=\"text\" />\r\n                <select id=\"selectOption\" ref={selectFromRef}>\r\n                    <option value=\"PM\">PM</option>\r\n                    <option value=\"AM\">AM</option>\r\n                </select>\r\n                <span>to</span>\r\n                <input ref={timeToRef} type=\"text\" />\r\n                <select id=\"selectOption\" ref={selectToRef}>\r\n                    <option value=\"PM\">PM</option>\r\n                    <option value=\"AM\">AM</option>\r\n                </select>\r\n                <button className=\"create\" onClick={ai}>Create schedule</button>\r\n            </div>\r\n            {loading&&<div className=\"typewriter\">\r\n                <div className=\"slide\"><i></i></div>\r\n                <div className=\"paper\"></div>\r\n                <div className=\"keyboard\"></div>\r\n            </div>}\r\n\r\n            <div className=\"schedule\">\r\n                {schedule}\r\n            </div>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Ai;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}