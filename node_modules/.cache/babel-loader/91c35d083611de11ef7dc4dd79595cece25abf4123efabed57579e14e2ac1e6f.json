{"ast":null,"code":"var _jsxFileName = \"D:\\\\HTML and CSS\\\\task-manager\\\\src\\\\Components\\\\Ai.jsx\",\n  _s = $RefreshSig$();\nimport { useContext, useRef, useState } from \"react\";\nimport { Store } from \"../Store\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Ai = () => {\n  _s();\n  let selectFromRef = useRef(null);\n  let selectToRef = useRef(null);\n  let store = useContext(Store);\n  let timeFromRef = useRef(null);\n  let timeToRef = useRef(null);\n  let [schedule, setSchedule] = useState([]);\n  async function AiCall() {\n    let query = getText();\n    const url = 'https://open-ai21.p.rapidapi.com/conversationgpt';\n    const options = {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json',\n        'X-RapidAPI-Key': '30bbe95bb8mshd18d66efbdf604ep1ab26ajsndc5b0723adc1',\n        'X-RapidAPI-Host': 'open-ai21.p.rapidapi.com'\n      },\n      body: {\n        messages: [{\n          role: 'user',\n          content: query\n        }],\n        web_access: false,\n        system_prompt: '',\n        temperature: 0.5,\n        top_k: 10,\n        top_p: 0.1,\n        max_tokens: 256\n      }\n    };\n    try {\n      const response = await fetch(url, options);\n      const result = await response.text();\n      console.log(result);\n      let steps = splitStringToList(result);\n      let temp = steps.map(step => {\n        return /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: step\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 16\n        }, this);\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  }\n  function splitStringToList(str) {\n    const splitArray = str.split(/\\d+\\.\\s/).filter(Boolean);\n    return splitArray;\n  }\n  function getText() {\n    let str = \"I want a day plan to make \";\n    let temp = store.currUser.tasks;\n    for (let i = 0; i < temp.length - 1; i++) {\n      str += temp[i].content + \" and \";\n    }\n    str += temp[temp.length - 1].content;\n    str += \" and i will start from \" + timeFromRef.current.value + selectFromRef.current.value + \" to \" + timeToRef.current.value + selectToRef.current.value;\n    str += \" make your response in the form 1. task 2. task etc\";\n    return str;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"settings\",\n      style: {\n        textAlign: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"from\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: timeFromRef,\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"selectOption\",\n        ref: selectFromRef,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"AM\",\n          children: \"PM\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"PM\",\n          children: \"AM\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"to\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: timeToRef,\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"selectOption\",\n        ref: selectToRef,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"AM\",\n          children: \"PM\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"PM\",\n          children: \"AM\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: AiCall,\n        children: \"Create schedule\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: s\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n};\n_s(Ai, \"z7/DKklyieG4b30MagvMDUKmS+w=\");\n_c = Ai;\nexport default Ai;\nvar _c;\n$RefreshReg$(_c, \"Ai\");","map":{"version":3,"names":["useContext","useRef","useState","Store","jsxDEV","_jsxDEV","Ai","_s","selectFromRef","selectToRef","store","timeFromRef","timeToRef","schedule","setSchedule","AiCall","query","getText","url","options","method","headers","body","messages","role","content","web_access","system_prompt","temperature","top_k","top_p","max_tokens","response","fetch","result","text","console","log","steps","splitStringToList","temp","map","step","children","fileName","_jsxFileName","lineNumber","columnNumber","error","str","splitArray","split","filter","Boolean","currUser","tasks","i","length","current","value","className","style","textAlign","ref","type","id","onClick","s","_c","$RefreshReg$"],"sources":["D:/HTML and CSS/task-manager/src/Components/Ai.jsx"],"sourcesContent":["import { useContext, useRef, useState } from \"react\";\r\nimport { Store } from \"../Store\";\r\nconst Ai = () => {\r\n    let selectFromRef=useRef(null);\r\n    let selectToRef=useRef(null);\r\n    let store=useContext(Store);\r\n    let timeFromRef=useRef(null);\r\n    let timeToRef=useRef(null);\r\n    let [schedule,setSchedule]=useState([])\r\n    async function AiCall(){\r\n\r\n        let query=getText();\r\n\r\n        const url = 'https://open-ai21.p.rapidapi.com/conversationgpt';\r\n        const options = {\r\n            method: 'POST',\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'X-RapidAPI-Key': '30bbe95bb8mshd18d66efbdf604ep1ab26ajsndc5b0723adc1',\r\n                'X-RapidAPI-Host': 'open-ai21.p.rapidapi.com'\r\n            },\r\n        body: {\r\n            messages: [\r\n                {\r\n                    role: 'user',\r\n                    content: query\r\n                }\r\n            ],\r\n            web_access: false,\r\n            system_prompt: '',\r\n            temperature: 0.5,\r\n            top_k: 10,\r\n            top_p: 0.1,\r\n            max_tokens: 256\r\n        }\r\n};\r\n\r\ntry {\r\n\tconst response = await fetch(url, options);\r\n\tconst result = await response.text();\r\n\tconsole.log(result);\r\n    let steps=splitStringToList(result);\r\n    let temp=steps.map(step=>{\r\n        return <h4>{step}</h4>\r\n    })\r\n} catch (error) {\r\n\tconsole.error(error);\r\n}\r\n    }\r\n    function splitStringToList(str) {\r\n        const splitArray = str.split(/\\d+\\.\\s/).filter(Boolean);\r\n        return splitArray;\r\n    }\r\n    function getText(){\r\n        let str=\"I want a day plan to make \"\r\n        let temp=store.currUser.tasks;\r\n        for(let i=0; i<temp.length-1; i++){\r\n            str+=temp[i].content+\" and \"\r\n        }\r\n        str+=temp[temp.length-1].content;\r\n        str+=\" and i will start from \"+ timeFromRef.current.value+selectFromRef.current.value+\" to \"+timeToRef.current.value+selectToRef.current.value;\r\n        str+=\" make your response in the form 1. task 2. task etc\"\r\n        return str\r\n    }\r\n    return ( \r\n        <div>\r\n            <div className=\"settings\" style={{textAlign:'center'}}>\r\n                <span>from</span>\r\n                <input ref={timeFromRef} type=\"text\" />\r\n                <select id=\"selectOption\" ref={selectFromRef}>\r\n                    <option value=\"AM\">PM</option>\r\n                    <option value=\"PM\">AM</option>\r\n                </select>\r\n                <span>to</span>\r\n                <input ref={timeToRef} type=\"text\" />\r\n                <select id=\"selectOption\" ref={selectToRef}>\r\n                    <option value=\"AM\">PM</option>\r\n                    <option value=\"PM\">AM</option>\r\n                </select>\r\n                <button onClick={AiCall}>Create schedule</button>\r\n            </div>\r\n            \r\n            <div>\r\n                {s}\r\n            </div>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Ai;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}